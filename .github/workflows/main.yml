name: Main Foodgram workflow

on: workflow_dispatch

env:
  FRONTEND_IMAGE: ${{secrets.DOCKER_HUB_USERNAME}}/foodgram_frontend
  BACKEND_IMAGE: ${{secrets.DOCKER_HUB_USERNAME}}/foodgram_backend
  GATEWAY_IMAGE: ${{secrets.DOCKER_HUB_USERNAME}}/foodgram_gateway

jobs:
  backend_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{env.BACKEND_IMAGE}}:latest
  frontend_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{env.FRONTEND_IMAGE}}:latest
  gateway_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{env.GATEWAY_IMAGE}}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - backend_image
      - frontend_image
      - gateway_image
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Copy files via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER}}
        key: ${{secrets.SSH_KEY}}
        passphrase: ${{secrets.SSH_PASSPHRASE}}
        source: "docker-compose.yml,setup.sh"
        target: "foodgram/upload"
        rm: true
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER}}
        key: ${{secrets.SSH_KEY}}
        passphrase: ${{secrets.SSH_PASSPHRASE}}
        script: |
          cd foodgram
          sudo docker compose down
          cp -rf upload/. .
          echo "POSTGRES_HOST=${{secrets.POSTGRES_HOST}}" >.env
          echo "POSTGRES_PORT=${{secrets.POSTGRES_PORT}}" >>.env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >>.env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >>.env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >>.env
          echo "DJANGO_SECRET_KEY=${{secrets.DJANGO_SECRET_KEY}}" >>.env
          sudo bash setup.sh deploy
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{secrets.TELEGRAM_TO}}
        token: ${{secrets.TELEGRAM_TOKEN}}
        message: Деплой проекта [${{github.repository}}] успешно выполнен!
